name: Package and Release

on:
  push:
    tags:
    - 'v*'
  workflow_dispatch:

jobs: 
  ubuntu:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        include:
          - extension_support: 0
            variant_tag: "-noext"
          - extension_support: 1
            variant_tag: ""
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Get version tag
      id: get_version
      uses: battila7/get-version-action@v2
    - name: Ubuntu-Install dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo apt-get install -y build-essential
        sudo apt-get install -y python3-dev python3-pip python3-virtualenv
        sudo apt-get install -y pkg-config libssl-dev libdbus-1-dev libdbus-glib-1-dev python-dbus libffi-dev libkrb5-dev

    - run: |
        pip install external/okta-0.0.3.1-py2.py3-none-any.whl
        pip install -e .
        pip install -e .[test]
        pip install -e .[setup]
    - name: Make standalone
      run: make standalone
      env:
        UST_EXTENSION: ${{matrix.extension_support}}
    - name: Test with pytest
      run: pytest
    - name: Get build
      run: |
        cd dist
        tar czf "user-sync-${UST_VERSION}${UST_VARIANT_TAG}-ubuntu.tar.gz" user-sync
      env:  
        UST_VARIANT_TAG: ${{matrix.variant_tag}}
        UST_VERSION: ${{ steps.get_version.outputs.version }}
    - name: Make artifacts
      uses: actions/upload-artifact@v2
      with:
          name: user-sync-artifact
          path: dist/*.tar.gz
          retention-days: 5
   
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - extension_support: 0
            variant_tag: "-noext"
          - extension_support: 1
            variant_tag: ""
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - run: |
        pip install external/okta-0.0.3.1-py2.py3-none-any.whl
        pip install -e .
        pip install -e .[test]
        pip install -e .[setup]
    - name: Make Standalone
      run: |
        make standalone
      env:
        UST_EXTENSION: ${{matrix.extension_support}}
    - name: Test with pytest
      run: pytest
    - name: Get version tag
      id: get_version
      uses: battila7/get-version-action@v2
    - name: zip 
      run: |
         cd dist
         7z a user-sync-${UST_VERSION}${UST_VARIANT_TAG}-win64.zip user-sync.exe
      env:
         UST_VARIANT_TAG: ${{matrix.variant_tag}}
         UST_VERSION: ${{ steps.get_version.outputs.version }}
    - name: Make artifact
      uses: actions/upload-artifact@v2
      with:
        name: user-sync-artifact
        path: dist/*.zip
        retention-days: 5
  
  centos:
    runs-on: ubuntu-latest
    env:
      LC_ALL: en_US.utf8
      LANG: en_US.utf8
    container:
      image: centos:7
    strategy:
      matrix:
        include:
          - extension_support: 0
            variant_tag: "-noext"
          - extension_support: 1
            variant_tag: ""
    steps:
      - uses: actions/checkout@v2
      - name: Centos-Install dependencies
        run: |
          yum install -y epel-release
          yum install -y https://repo.ius.io/ius-release-el7.rpm
          yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          yum install -y gcc make python36u-devel python36u-pip python36u-virtualenv
          yum install -y python-devel python-pip python-virtualenv
          yum install -y pkgconfig openssl-devel dbus-glib-devel dbus-python libffi-devel
          rm -f /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python
      - name: Make Standalone
        run: |
          pip3 install external/okta-0.0.3.1-py2.py3-none-any.whl
          pip3 install -e .
          pip3 install -e .[test]
          pip3 install -e .[setup]
          make standalone
        env:
          UST_EXTENSION: ${{matrix.extension_support}}
      - name: Test with pytest
        run: pytest -s
      - name: Get version tag
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Get build
        run: |
          cd dist
          tar czf "user-sync-${UST_VERSION}${UST_VARIANT_TAG}-centos.tar.gz" user-sync
        env:
          UST_VARIANT_TAG: ${{matrix.variant_tag}}
          UST_VERSION: ${{ steps.get_version.outputs.version }}
      - name: make atrifact
        uses: actions/upload-artifact@v2
        with:
          name: user-sync-artifact
          path: dist/*.tar.gz
          retention-days: 5
    
    

  examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: user-sync-examples-zip
      run: |
         cd examples
         zip -r user-sync-examples.zip .
    - uses: actions/upload-artifact@v2
      with:
        name: user-sync-artifact
        path: examples/*.zip
        retention-days: 5
    - name: user-sync.tar.gz
      run: |
         tar -czvf "user-sync-examples.tar.gz" examples
    - uses: actions/upload-artifact@v2
      with:
        name: user-sync-artifact
        path: user-sync-examples.tar.gz
        retention-days: 5

  release:
    runs-on: ubuntu-latest
    needs: [ubuntu,windows, centos, examples]
    steps:
    - uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: user-sync ${{ github.ref }}
        body_path: .changelog/latest.md
        draft: true
        prerelease: false

  upload-assets:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
    - name: Get version tag
      id: get_version
      uses: battila7/get-version-action@v2
    - run: ls -R
    - uses: fnkr/github-action-ghr@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GHR_PATH: user-sync-artifact/
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}








